<?php
require_once 'security.php'; // security headers & nonce
require_once 'config.php';   // session & common setup
require_once 'db.php';       // $pdo setup
require_once 'information.php';

if (!isset($_SESSION['admin_logged_in'])) {
    header("Location: index.php");
    exit();
}

include 'sidebar.html';
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <!-- Favicon Configuration -->
    <link rel="icon" href="img/pdb.png" type="image/x-icon">
    
    <!-- CSS and Fonts -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="style.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        .dashboard-container {
            display: grid;
            grid-template-columns: 1fr;
            gap: 2rem;
            padding: 1rem;
            margin-left: 260px; /* Sidebar width */
        }

        .card-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .chart-card {
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            padding: 1.5rem;
            transition: all 0.3s ease;
        }

        .chart-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.12);
        }

        .chart-wrapper {
            position: relative;
            height: 350px;
            width: 100%;
        }

        .chart-title {
            text-align: center;
            margin-bottom: 1.5rem;
            color: #2c3e50;
            font-weight: 600;
        }

        @media (max-width: 768px) {
            .dashboard-container {
                margin-left: 0;
                grid-template-columns: 1fr;
            }
            
            .card-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <div class="header">
            <h1>Dashboard Overview</h1>
        </div>
        
        <!-- Strand Summary Cards -->
        <div class="card-grid">
            <?php foreach ($strand_data as $strand => $count): ?>
                <div class="chart-card">
                    <div class="card-body text-center">
                        <i class="fa-solid fa-user-graduate fa-2x text-info mb-3"></i>
                        <h3 class="card-title text-info"><?= htmlspecialchars($strand) ?></h3>
                        <p class="card-text display-4 fw-bold"><?= $count ?></p>
                    </div>
                </div>
            <?php endforeach; ?>
        </div>

        <!-- Document Submission Chart -->
        <div class="chart-card">
            <h3 class="chart-title">Document Submission Summary</h3>
            <div class="chart-wrapper">
                <canvas id="documentChart"></canvas>
            </div>
        </div>

        <!-- City Distribution Chart -->
        <div class="chart-card">
            <h3 class="chart-title">City Distribution</h3>
            <div class="chart-wrapper">
                <canvas id="cityChart"></canvas>
            </div>
        </div>
    </div>

<script>
// Main initialization function
document.addEventListener('DOMContentLoaded', function() {
    initializeSidebar();
    initializeDocumentChart();
    initializeCityChart();
    setupCardHover();
    setupExportButtons();
    
    // Responsive chart resizing
    window.addEventListener('resize', function() {
        if (window.documentChart) {
            window.documentChart.resize();
        }
        if (window.cityChart) {
            window.cityChart.resize();
        }
    });
});

// City Chart Implementation
function initializeCityChart() {
    const ctx = document.getElementById('cityChart');
    if (!ctx) return;

    // Destroy previous instance if exists
    if (window.cityChart) {
        window.cityChart.destroy();
    }

    const cityData = <?php echo json_encode($city_data, JSON_HEX_TAG); ?>;
    
    if (!cityData || Object.keys(cityData).length === 0) {
        ctx.innerHTML = '<p class="text-muted text-center py-4">No city data available</p>';
        return;
    }

    const backgroundColors = generateColors(Object.keys(cityData).length, true);
    
    window.cityChart = new Chart(ctx, {
        type: 'doughnut',
        data: {
            labels: Object.keys(cityData),
            datasets: [{
                data: Object.values(cityData),
                backgroundColor: backgroundColors,
                borderWidth: 1,
                hoverOffset: 10
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'right',
                    labels: {
                        boxWidth: 12,
                        padding: 20,
                        font: {
                            size: 12
                        }
                    }
                },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            const total = context.dataset.data.reduce((a, b) => a + b, 0);
                            const value = context.raw;
                            const percentage = Math.round((value / total) * 100);
                            return `${context.label}: ${value} (${percentage}%)`;
                        }
                    }
                }
            },
            cutout: '65%'
        }
    });
}

// Document Chart Implementation
function initializeDocumentChart() {
    const ctx = document.getElementById('documentChart');
    if (!ctx) return;

    // Destroy previous instance if exists
    if (window.documentChart) {
        window.documentChart.destroy();
    }

    const documentData = <?php echo json_encode($document_data, JSON_HEX_TAG); ?>;
    
    if (!documentData || Object.keys(documentData).length === 0) {
        ctx.innerHTML = '<p class="text-muted text-center py-4">No document data available</p>';
        return;
    }

    const backgroundColors = generateColors(Object.keys(documentData).length);
    const borderColors = backgroundColors.map(color => shadeColor(color, -20));
    
    window.documentChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: Object.keys(documentData),
            datasets: [{
                label: 'Number of Submissions',
                data: Object.values(documentData),
                backgroundColor: backgroundColors,
                borderColor: borderColors,
                borderWidth: 2,
                borderRadius: 6,
                barThickness: 'flex',
                minBarLength: 5
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        precision: 0,
                        stepSize: 1
                    },
                    grid: {
                        color: 'rgba(0, 0, 0, 0.05)'
                    }
                },
                x: {
                    grid: {
                        display: false
                    }
                }
            },
            plugins: {
                legend: {
                    display: false
                },
                tooltip: {
                    backgroundColor: 'rgba(0, 0, 0, 0.85)',
                    titleFont: {
                        size: 14,
                        weight: 'bold'
                    },
                    bodyFont: {
                        size: 12
                    },
                    padding: 12,
                    cornerRadius: 6,
                    displayColors: true,
                    callbacks: {
                        label: function(context) {
                            return `${context.dataset.label}: ${context.raw}`;
                        }
                    }
                }
            }
        }
    });
}

// Helper functions
function generateColors(count, pastel = false) {
    const colors = [];
    const hueStep = 360 / count;
    
    for (let i = 0; i < count; i++) {
        const hue = i * hueStep;
        if (pastel) {
            colors.push(`hsl(${hue}, 70%, 80%)`);
        } else {
            colors.push(`hsl(${hue}, 70%, 60%)`);
        }
    }
    
    return colors;
}

function shadeColor(color, percent) {
    // Convert HSL to array
    const hsl = color.match(/\d+/g);
    let h = hsl[0], s = hsl[1], l = hsl[2];
    
    // Adjust lightness
    l = Math.min(100, Math.max(0, parseInt(l) + percent));
    
    return `hsl(${h}, ${s}%, ${l}%)`;
}

// Existing functions (keep these the same as in your original code)
function initializeSidebar() {
    // ... your existing sidebar code ...
}

function setupCardHover() {
    // ... your existing card hover code ...
}

function setupExportButtons() {
    // ... your existing export buttons code ...
}

function downloadCSV() {
    // ... your existing CSV download code ...
}

function downloadWord() {
    // ... your existing Word export code ...
}

function printPage() {
    // ... your existing print code ...
}
</script>
</body>
</html>
